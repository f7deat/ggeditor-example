{"version":3,"sources":["Panel.js","CustomNode.js","tools/Tool.js","App.js","serviceWorker.js","index.js"],"names":["NodePanel","className","type","model","label","shape","EntryNode","size","DelayNode","NodeDrag","style","fontWeight","borderBottom","paddingBottom","padding","color","float","background","border","margin","borderRadius","borderTop","CustomNode","name","config","getCustomConfig","wrapperStyle","fill","contentStyle","labelStyle","fontSize","getAnchorPoints","extend","React","Component","Tool","constants","EditorCommand","Undo","disabledClassName","Redo","Copy","Paste","Remove","ZoomIn","ZoomOut","data","nodes","id","x","y","edges","source","target","App","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c5ffb0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Item, ItemPanel } from 'gg-editor';\r\n\r\nfunction NodePanel() {\r\n    return (\r\n        <div className=\"p-4\">\r\n            <ItemPanel>\r\n                <Item\r\n                    type='node'\r\n                    model={{\r\n                        label: 'Entry Trigger',\r\n                        shape: 'entry-node',\r\n                    }}\r\n                >\r\n                    <EntryNode />\r\n                </Item>\r\n                <Item\r\n                    type='node'\r\n                    model={{\r\n                        size: [80, 24],\r\n                        label: 'rect',\r\n                    }}\r\n                >\r\n                    <DelayNode />\r\n                </Item>\r\n                <Item\r\n                    type='node'\r\n                    model={{\r\n                        size: [100, 50],\r\n                        label: 'ellipse',\r\n                    }}\r\n                >\r\n                    <NodeDrag />\r\n                </Item>\r\n                <Item\r\n                    type='node'\r\n                    model={{\r\n                        size: [80, 80],\r\n                        label: 'diamond',\r\n                    }}\r\n                >\r\n                    <NodeDrag />\r\n                </Item>\r\n                <Item\r\n                    type='node'\r\n                    model={{\r\n                        size: [50, 50],\r\n                        label: 'triangle',\r\n                    }}\r\n                >\r\n                    <NodeDrag />\r\n                </Item>\r\n            </ItemPanel>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NodeDrag() {\r\n    return (\r\n        <div className=\"panel-node-item\">\r\n            <div style={{ fontWeight: 'bold', borderBottom: '1px solid #ececec', paddingBottom: 8 }}>Entry Title</div>\r\n            <div style={{ padding: '10px', color: '#bbb' }}>\r\n                wait for <span style={{ fontWeight: 'bold' }}>1 minute</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction EntryNode() {\r\n    return (\r\n        <div className=\"panel-node-item\">\r\n            <div style={{ fontWeight: 'bold', paddingBottom: 8 }}><i style={{ float: 'right', color: '#e1e1e1' }} className=\"fas fa-question-circle\"></i> Entry Trigger</div>\r\n            <div style={{ background: '#f5f9fb', border: '1px solid #02b2d0', padding: 20, margin: 8, borderRadius: 8, fontWeight: '600' }}>\r\n                <i className=\"fas fa-bolt\" style={{ color: '#02b2d0' }}></i> signed_up\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DelayNode() {\r\n    return (\r\n        <div className=\"panel-node-item\">\r\n            <div style={{ fontWeight: 'bold', paddingBottom: 8 }}><i style={{ color: '#b97ed6' }} className=\"fas fa-clock\"></i> Delay</div>\r\n            <div style={{ borderTop: '1px solid #eee', padding: 15 }}>\r\n                Wait for <b>1 Minute</b>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { NodePanel, }\r\n","import React from \"react\";\r\nimport { RegisterNode } from \"gg-editor\";\r\n\r\nclass CustomNode extends React.Component {\r\n    render() {\r\n        return (\r\n            <RegisterNode name=\"entry-node\" config={{\r\n                getCustomConfig(model) {\r\n                    return {\r\n                        size: [300, 120],\r\n                        wrapperStyle: {\r\n                            fill: '#09123e',\r\n                        },\r\n                        contentStyle: {\r\n                            fill: 'rgb(245, 249, 251)',\r\n                            border: '1px solid rgb(2, 178, 208)'\r\n                        },\r\n                        labelStyle: {\r\n                            fill: '#09123e',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 16\r\n                        },\r\n                    };\r\n                },\r\n                getAnchorPoints() {\r\n                    return [\r\n                        [0.5, 0],\r\n                        [0.5, 1],\r\n                        [0, 0.5],\r\n                        [1, 0.5],\r\n                    ];\r\n                },\r\n            }} extend={\"bizFlowNode\"} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomNode;\r\n","import { Command, constants } from 'gg-editor';\r\nimport React from 'react';\r\n\r\nexport default function Tool() {\r\n    return (\r\n        <div className=\"flex px-4 text-gray-700 bg-white\">\r\n            <Command name={constants.EditorCommand.Undo} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-undo\"></i></button>\r\n            </Command>\r\n            <Command name={constants.EditorCommand.Redo} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-redo\"></i></button>\r\n            </Command>\r\n            <Command name={constants.EditorCommand.Copy} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-copy\"></i></button>\r\n            </Command>\r\n            <Command name={constants.EditorCommand.Paste} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-paste\"></i></button>\r\n            </Command>\r\n            <Command name={constants.EditorCommand.Remove} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-trash\"></i></button>\r\n            </Command>\r\n            <Command name={constants.EditorCommand.ZoomIn} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-search-plus\"></i></button>\r\n            </Command>\r\n            <Command name={constants.EditorCommand.ZoomOut} className=\"p-3\" disabledClassName=\"text-gray-400\">\r\n                <button className=\"btn\" type=\"button\"><i className=\"fas fa-search-minus\"></i></button>\r\n            </Command>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport GGEditor, { Flow, EditableLabel } from 'gg-editor';\nimport { NodePanel } from './Panel';\nimport CustomNode from './CustomNode';\nimport Tool from './tools/Tool';\n\nconst data = {\n  nodes: [\n    {\n      id: '0',\n      label: 'Node',\n      x: 55,\n      y: 55,\n    },\n    {\n      id: '1',\n      label: 'Node',\n      x: 55,\n      y: 255,\n    },\n  ],\n  edges: [\n    {\n      label: 'Label',\n      source: '0',\n      target: '1',\n    },\n  ],\n};\nfunction App() {\n  return (\n    <GGEditor className=\"h-full flex\">\n      <div className=\"flex-grow\">\n        <Tool />\n        <div style={{height: 'calc(100% - 48px)'}}>\n          <Flow data={data} className=\"bg-gray-100 h-full\" />\n          <EditableLabel />\n          <CustomNode />\n        </div>\n      </div>\n      <div className=\"w-96 border-l\">\n        <NodePanel />\n      </div>\n    </GGEditor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}